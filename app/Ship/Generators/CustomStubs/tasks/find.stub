<?php

namespace App\Containers\{{section-name}}\{{container-name}}\Tasks;

use App\Containers\{{section-name}}\{{container-name}}\Data\Dto\{{model}}Dto;
use App\Containers\{{section-name}}\{{container-name}}\Data\Repositories\{{model}}RepositoryInterface;
use App\Ship\Exceptions\NotFoundException;
use App\Ship\Parents\Tasks\Task;
use Exception;

class Find{{model}}ByIdTask extends Task implements Find{{model}}ByIdTaskInterface
{
    public function __construct(private {{model}}RepositoryInterface $repository)
    {
    }

    public function run(int $id): {{model}}Dto
    {
        try {
            ${{model}} = $this->repository->find($id);

            return (new {{model}}Dto())
                        ->setId(${{model}}->id)
                        ->setCreateAt(${{model}}->created_at)
                        ->setUpdateAt(${{model}}->updated_at);
        }
        catch (Exception $exception) {
            throw new NotFoundException();
        }
    }
}

interface Find{{model}}ByIdTaskInterface
{
    public function run(int $id): {{model}}Dto;
}
